==================================
The ``2-matrix_divided.py`` module
==================================

This module contains only one function called
``matrix_divided()``

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

    >>> matrix = [
    ...	[1, 2, 3],
    ...	[4, 5, 6]
    ... ]

    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> print(matrix_divided(matrix, float("inf")))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

    >>> print(matrix_divided(matrix, "string"))
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    >>> matrix = [
    ...	['a', 1, 2],
    ...	[4, 5, 6]
    ... ]

    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>>	matrix = ""
   
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>>	matrix = []

    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>>	matrix = ["s"]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>>	matrix = [[2, 3, 4], [2, 3]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

    >>>	matrix = [[2, 3, 4], [2, 3]]
    >>> print(matrix_divided(matrix))
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
