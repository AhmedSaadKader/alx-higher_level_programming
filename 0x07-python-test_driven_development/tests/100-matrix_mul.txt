=======================
The `matrix_mul` module
=======================

Module that contains function matrix_mul that multiplies 2 matrices

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]

    >>> matrix_mul([[3, 4], [5, 6]], [[5, 7, 19], [6, 8, 0]])
    [[39, 53], [61, 83]]

    >>> matrix_mul(1, [[3, 4], [5, 6]])
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list

    >>> matrix_mul([[3, 4], [5, 6]], 1)
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list

    >>> matrix_mul([1], [[3, 4], [5, 6]])
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list of lists

    >>> matrix_mul([[3, 4], [5, 6]], [1])
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list of lists

    >>> matrix_mul([], [[3, 4], [5, 6]])
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty

    >>> matrix_mul([[3, 4], [5, 6]], [])
    Traceback (most recent call last):
        ...
    ValueError: m_b can't be empty

    >>> matrix_mul([["a"]], [[3, 4], [5, 6]])
    Traceback (most recent call last):
        ...
    TypeError: m_a should contain only integers or floats

    >>> matrix_mul([[3, 4], [5, 6]], [["b"]])
    Traceback (most recent call last):
        ...
    TypeError: m_b should contain only integers or floats

    >>> matrix_mul([[1, 2], [1]], [[3, 4], [5, 6]])
    Traceback (most recent call last):
        ...
    TypeError: each row of m_a must be of the same size

    >>> matrix_mul([[3, 4], [5, 6]], [[5, 7], [6, 8, 0]])
    Traceback (most recent call last):
        ...
    TypeError: each row of m_b must be of the same size