====================
base_geometry module
====================

"""BaseGeometry class"""

	>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

	>>> base_geometry = BaseGeometry()

	>>> base_geometry.area()
	Traceback (most recent call last):
		...
	Exception: area() is not implemented

	>>> base_geometry.integer_validator("my_int", 12)

	>>> base_geometry.integer_validator("width", 89)

	>>> base_geometry.integer_validator("name", "John")
	Traceback (most recent call last):
		...
	TypeError: name must be an integer

	>>> base_geometry.integer_validator("name", False)
	Traceback (most recent call last):
		...
	TypeError: name must be an integer

	>>> base_geometry.integer_validator("name", ["John"])
	Traceback (most recent call last):
		...
	TypeError: name must be an integer

	>>> base_geometry.integer_validator("name", {"John": 23})
	Traceback (most recent call last):
		...
	TypeError: name must be an integer

	>>> base_geometry.integer_validator("name", 0.23)
	Traceback (most recent call last):
		...
	TypeError: name must be an integer

	>>> base_geometry.integer_validator("age", 0)
	Traceback (most recent call last):
		...
	ValueError: age must be greater than 0

	>>> base_geometry.integer_validator("distance", -4)
	Traceback (most recent call last):
		...
	ValueError: distance must be greater than 0

	>>> base_geometry.integer_validator("distance")
	Traceback (most recent call last):
		...
	TypeError: integer_validator() missing 1 required positional argument: 'value'